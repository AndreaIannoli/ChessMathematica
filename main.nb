(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 14.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     16455,        350]
NotebookOptionsPosition[     15936,        332]
NotebookOutlinePosition[     16371,        349]
CellTagsIndexPosition[     16328,        346]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"\n", 
  RowBox[{"(*", 
   RowBox[{
   "Load", " ", "the", " ", "external", " ", "package", " ", "ChessPackage", 
    " ", "from", " ", "file", " ", 
    RowBox[{"ChessPackage", ".", "m"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Needs", "[", 
     RowBox[{"\"\<ChessPackage`\>\"", ",", 
      RowBox[{"FileNameJoin", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"NotebookDirectory", "[", "]"}], ",", 
         "\"\<ChessPackage.m\>\""}], "}"}], "]"}]}], "]"}], ";"}], "\n", 
   RowBox[{"plotGui", "[", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.920457769030279*^9, 3.920457770920313*^9}, {
   3.9222590880217323`*^9, 3.9222591579626093`*^9}, {3.9222592475754004`*^9, 
   3.922259366863925*^9}, {3.922259428945451*^9, 3.922259463798045*^9}, {
   3.922259531639621*^9, 3.922259573614012*^9}, {3.922259720168808*^9, 
   3.922259739258234*^9}, {3.922259865255219*^9, 3.9222598978944283`*^9}, {
   3.922515087123607*^9, 3.922515114447988*^9}, 3.922516055263216*^9, {
   3.922516312036955*^9, 3.922516315407799*^9}, 3.922516440682078*^9, {
   3.922521382940493*^9, 3.922521385185927*^9}, {3.922522536313685*^9, 
   3.922522540196845*^9}, {3.922522762350971*^9, 3.922523063129769*^9}, {
   3.922523093652326*^9, 3.922523101429091*^9}, {3.922523148593*^9, 
   3.922523361595233*^9}, {3.9225234963508167`*^9, 3.92252357099445*^9}, {
   3.922523696386137*^9, 3.9225236995617943`*^9}, {3.922523782731977*^9, 
   3.922523787009901*^9}, {3.922523827578394*^9, 3.9225238288577414`*^9}, {
   3.922867869748981*^9, 3.922867883776186*^9}, {3.923469979843672*^9, 
   3.923469981616307*^9}, 3.923471182854265*^9, 3.923471255312289*^9, {
   3.923471287161734*^9, 3.923471289408917*^9}, 3.923471357862492*^9, {
   3.9234714262367783`*^9, 3.923471476145708*^9}, {3.923471778340328*^9, 
   3.923471854625555*^9}, 3.923471891287556*^9, {3.923472077405817*^9, 
   3.923472119119703*^9}, {3.923557012045992*^9, 3.923557013034967*^9}, {
   3.923557207927201*^9, 3.92355723770814*^9}, 3.923557491349985*^9, {
   3.923728638789089*^9, 3.923728682386296*^9}, {3.923729088658222*^9, 
   3.923729118114029*^9}, {3.923730011149269*^9, 3.923730022960976*^9}, 
   3.923730649295023*^9, {3.92373089548633*^9, 3.923730901926515*^9}, {
   3.923731059858944*^9, 3.92373107751894*^9}, {3.923731108617588*^9, 
   3.9237311118917446`*^9}, {3.923731212567889*^9, 3.92373123195623*^9}, {
   3.923732884573709*^9, 3.923732912949591*^9}, {3.923732997033369*^9, 
   3.923733107590584*^9}, {3.923733146695006*^9, 3.923733159885803*^9}, {
   3.923733207818062*^9, 3.923733247137888*^9}, {3.923733502016823*^9, 
   3.923733601844593*^9}, {3.923733642900168*^9, 3.923733644112507*^9}, {
   3.9237336926737003`*^9, 3.92373371150708*^9}, {3.9237337527909*^9, 
   3.923733908471651*^9}, {3.924677322927353*^9, 3.924677342992588*^9}, {
   3.924677466337345*^9, 3.924677510411955*^9}, {3.924677558335089*^9, 
   3.924677569390245*^9}, {3.924677648030319*^9, 3.924677648905773*^9}, {
   3.924677770092461*^9, 3.9246778064935207`*^9}, {3.9246778710201435`*^9, 
   3.924677957276978*^9}, {3.924678017754978*^9, 3.924678019559789*^9}, {
   3.924678143824695*^9, 3.924678146767221*^9}, {3.9246782765089207`*^9, 
   3.9246782823978786`*^9}, {3.924678315288265*^9, 3.92467832549782*^9}, {
   3.9246830614512424`*^9, 3.924683081214325*^9}, {3.924683196046253*^9, 
   3.9246831984404488`*^9}, {3.9246832343545227`*^9, 3.924683234889326*^9}, {
   3.9246833003178635`*^9, 3.9246833376930847`*^9}, {3.92468342585812*^9, 
   3.924683427727556*^9}, {3.924683516150454*^9, 3.924683526279619*^9}, {
   3.924683663845049*^9, 3.924683666418743*^9}, {3.9246843371056366`*^9, 
   3.9246843387115192`*^9}, {3.924684496544632*^9, 3.92468450094038*^9}, {
   3.924684646920194*^9, 3.92468464967718*^9}, {3.924685113121006*^9, 
   3.924685114333183*^9}, {3.9247132090812893`*^9, 3.924713451698614*^9}, {
   3.92471350322299*^9, 3.924713738339527*^9}, {3.924713768879759*^9, 
   3.924713831916924*^9}, {3.92471387665235*^9, 3.924713884061379*^9}, {
   3.9247139390440903`*^9, 3.9247140238034897`*^9}, {3.924934762336578*^9, 
   3.924934765070553*^9}, 3.9249348038058605`*^9, {3.9249387835154552`*^9, 
   3.924938792339409*^9}, {3.92493906184342*^9, 3.924939064968607*^9}, {
   3.924939130790695*^9, 3.924939150624052*^9}, {3.924939205578915*^9, 
   3.924939207818697*^9}, {3.924939301060915*^9, 3.924939336344263*^9}, {
   3.924941928349119*^9, 3.9249419288301497`*^9}, 3.9249420143704433`*^9, {
   3.9249425398624067`*^9, 3.9249425653066072`*^9}, {3.924942839340469*^9, 
   3.924942873972336*^9}, {3.924943071886381*^9, 3.9249431495091877`*^9}, {
   3.924943464298822*^9, 3.9249434743050137`*^9}, 3.924943823622368*^9, {
   3.924944555665723*^9, 3.924944573917966*^9}, 3.924944658134581*^9, {
   3.924944898848341*^9, 3.924944901151581*^9}, {3.9249449611297398`*^9, 
   3.924944986688943*^9}, {3.924945332615588*^9, 3.924945343339308*^9}, {
   3.924946521279896*^9, 3.924946535926096*^9}, {3.924946586926731*^9, 
   3.924946588599258*^9}, {3.9249471853047333`*^9, 3.924947186811537*^9}, {
   3.924947272723714*^9, 3.9249472730083838`*^9}, {3.924947390703413*^9, 
   3.924947411495285*^9}, {3.924947445297775*^9, 3.924947471258255*^9}, {
   3.924947668576523*^9, 3.924947671377178*^9}, {3.924947903350089*^9, 
   3.9249479105926647`*^9}, {3.924947956299526*^9, 3.924947962635264*^9}, {
   3.9253064918406467`*^9, 3.925306498905051*^9}, {3.92530714681171*^9, 
   3.925307152942024*^9}, {3.9253074510155582`*^9, 3.925307457993877*^9}, {
   3.925307509462169*^9, 3.925307516134666*^9}, {3.925307588020368*^9, 
   3.925307593368318*^9}, {3.9253077071192493`*^9, 3.925307715632927*^9}, {
   3.925307791051049*^9, 3.9253077967596817`*^9}, {3.92530782696589*^9, 
   3.925307835856222*^9}, {3.925307881486044*^9, 3.9253078875159616`*^9}, {
   3.92530794957292*^9, 3.9253079566101418`*^9}, {3.925308024106187*^9, 
   3.925308030451933*^9}, {3.9253080904795837`*^9, 3.925308127460701*^9}, {
   3.925308216038828*^9, 3.925308225485043*^9}, {3.925308360827864*^9, 
   3.92530837032057*^9}, {3.925308514053176*^9, 3.925308521066593*^9}, {
   3.925309427381542*^9, 3.925309432866897*^9}, {3.9253094711267157`*^9, 
   3.925309477042451*^9}, {3.925309544471838*^9, 3.925309551915088*^9}, {
   3.925309604499136*^9, 3.9253096137416153`*^9}, {3.925310127259944*^9, 
   3.925310140491789*^9}, {3.925310964766386*^9, 3.925310970799457*^9}, {
   3.925311038385061*^9, 3.925311044135592*^9}, {3.925311113837983*^9, 
   3.925311119970602*^9}, {3.9253114217399883`*^9, 3.9253114304072742`*^9}, {
   3.925311889167094*^9, 3.925311895619164*^9}, {3.925312491082549*^9, 
   3.925312503449362*^9}, {3.9254020578451576`*^9, 3.925402061783287*^9}},
 NumberMarks->False,
 CellLabel->"In[1]:=",ExpressionUUID->"cba7eb3c-68f1-4163-87e4-1a407070ef8d"],

Cell[BoxData[
 DynamicModuleBox[{}, 
  PanelBox[
   TagBox[GridBox[{
      {
       TemplateBox[{
         InterpretationBox[
          Cell[
           BoxData[
            FormBox[
             StyleBox["\"Chess Player\"", Bold, 40, 
              RGBColor[1, 0, 0], FontFamily -> "Brush Script MT", 
              StripOnInput -> False], TextForm]], "InlineText"], 
          Text[
           Style["Chess Player", Bold, 40, 
            RGBColor[1, 0, 0], FontFamily -> "Brush Script MT"]]]},
        "RowDefault"]},
      {
       DynamicBox[ToBoxes[
         If[ChessPackage`Public`gamemode == False, 
          Column[{
            Row[{
              Text[
               Style[
               "Opening: ", Bold, 20, Green, FontFamily -> "Helvetica Neue"]], 
              PopupMenu[
               Dynamic[ChessPackage`Public`openingSelectedValue], 
               ChessPackage`Public`openings], 
              Spacer[100], 
              Text[
               Style[
               "Type of win: ", Bold, 20, Green, FontFamily -> 
                "Helvetica Neue"]], 
              PopupMenu[
               Dynamic[ChessPackage`Public`victorySelectedValue], 
               ChessPackage`Public`winTypes], 
              Spacer[100], 
              Button["Filter", 
               ChessPackage`Public`getIndicesWithNamesNormalized[
               ChessPackage`Public`openingSelectedValue, 
                ChessPackage`Public`victorySelectedValue]]}], 
            Row[{
              InputField[
               Dynamic[ChessPackage`Public`indexOfSelectedGame], Number, 
               FieldHint -> "Type the game index here"], 
              Button[
              "Play", {
                ChessPackage`Public`chessHistory, 
                 ChessPackage`Public`pgnMovesArray, 
                 ChessPackage`Public`pgnmoves, ChessPackage`Public`name, 
                 ChessPackage`Public`selectedId, 
                 ChessPackage`Public`typeofwin} = 
               ChessPackage`selectedGame[ChessPackage`Public`data, 
                 ToExpression[ChessPackage`Public`indexOfSelectedGame]]]}]}, 
           Alignment -> Center], ""], StandardForm],
        ImageSizeCache->{
         492.83556776363537`, {17.875429736766602`, 20.768398388232672`}}]},
      {
       TemplateBox[{
         TagBox[
          GridBox[{{
             DynamicBox[
              ToBoxes[
               ChessPackage`Public`chessAnimate[
               ChessPackage`Public`chessHistory, 
                ChessPackage`Public`pgnMovesArray], StandardForm], 
              ImageSizeCache -> {
               473., {198.05351567426698`, 200.94648432573302`}}]}}, 
           DefaultBaseStyle -> "Column", 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"], 
         TemplateBox[{1}, "Spacer1"], 
         DynamicBox[
          ToBoxes[
           If[ChessPackage`Public`gamemode == False, 
            Grid[
             MapThread[{#, 
               Button[
               "\[FilledRightTriangle]", {{
                  ChessPackage`Public`chessHistory, 
                   ChessPackage`Public`pgnMovesArray, 
                   ChessPackage`Public`pgnmoves, ChessPackage`Public`name, 
                   ChessPackage`Public`selectedId, 
                   ChessPackage`Public`typeofwin} = 
                 ChessPackage`selectedGame[ChessPackage`Public`data, 
                   ToExpression[
                    First[
                    StringSplit[#, " "]]]]}]}& , {
              ChessPackage`Public`indicesWithNamesNormalized}], Frame -> All],
             ""], StandardForm], 
          ImageSizeCache -> {
           87.88609298706055, {190.043515674267, 192.93648432573306`}}], 
         DynamicBox[
          ToBoxes[
           If[ChessPackage`Public`gamemode == False, 
            Button[
            "RANDOM", {
              ChessPackage`Public`chessHistory, 
               ChessPackage`Public`pgnMovesArray, 
               ChessPackage`Public`pgnmoves, ChessPackage`Public`name, 
               ChessPackage`Public`selectedId, ChessPackage`Public`typeofwin} = 
             ChessPackage`randomGame[
              ChessPackage`Public`data, ChessPackage`Public`dimensioneData]], 
            ""], StandardForm], 
          ImageSizeCache -> {35.9, {5.949999999999999, 10.95}}]},
        "RowDefault"]},
      {
       DynamicBox[ToBoxes[
         If[
          Or[
          ChessPackage`Public`gamemode == False, ChessPackage`Public`reveal == 
           True], 
          Row[{
            Dynamic[
             Text[
              Style[ChessPackage`Public`selectedId, Bold, 15, 
               Darker[Gray], FontFamily -> "Helvetica Neue"]]], 
            Spacer[3], 
            Dynamic[
             Text[
              Style[ChessPackage`Public`name, Bold, 15, 
               Darker[Gray], FontFamily -> "Helvetica Neue"]]], 
            Spacer[3], 
            Dynamic[
             Text[
              Style[ChessPackage`Public`typeofwin, Bold, 15, 
               Darker[Gray], FontFamily -> "Helvetica Neue"]]]}], 
          Text[
           Style["?", Bold, 15, 
            Darker[Gray], FontFamily -> "Helvetica Neue"]]], StandardForm],
        ImageSizeCache->{129.4381634765625, {2.22509765625, 9.50537109375}}]},
      {
       TemplateBox[{
         DynamicBox[
          ToBoxes[
           Text[
            Style[
            ChessPackage`Public`pgnmoves, Bold, 10, Gray, FontFamily -> 
             "Helvetica Neue"]], StandardForm], 
          ImageSizeCache -> {
           661.4316596031188, {1.4833984375, 6.3369140625}}]},
        "RowDefault"]},
      {
       DynamicBox[ToBoxes[
         If[ChessPackage`Public`gamemode == True, 
          Column[{
            Text[
             Style["What's the opening?", Bold, 15, 
              Darker[Gray], FontFamily -> "Helvetica Neue"]], 
            InputField[
             Dynamic[ChessPackage`Public`answer], String, FieldHint -> 
             "Type your answer here"], 
            Button["Submit", 
             If[
             ChessPackage`Public`answer == ChessPackage`Public`name, 
              ChessPackage`Public`answerResult = "Correct answer!", 
              ChessPackage`Public`answerResult = "Wrong answer!"]], 
            Text[
             Style[
              Dynamic[ChessPackage`Public`answerResult], Bold, 15, 
              Darker[Gray], FontFamily -> "Helvetica Neue"]], 
            Button[
            "Next question \[RightArrow]", {{
               ChessPackage`Public`chessHistory, 
                ChessPackage`Public`pgnMovesArray, 
                ChessPackage`Public`pgnmoves, ChessPackage`Public`name, 
                ChessPackage`Public`selectedId, 
                ChessPackage`Public`typeofwin} = 
              ChessPackage`randomGame[
               ChessPackage`Public`data, ChessPackage`Public`dimensioneData], 
              ChessPackage`Public`reveal = False, 
              ChessPackage`Public`answerResult = ""}], 
            Button[
            "Reveal the opening", ChessPackage`Public`reveal = 
             Not[ChessPackage`Public`reveal]]}, Alignment -> Center], ""], 
         StandardForm],
        ImageSizeCache->{0., {0., 3.15}}]},
      {
       ButtonBox[
        DynamicBox[ToBoxes[
         "Gamemode: " <> ToString[ChessPackage`Public`gamemode], StandardForm],
         ImageSizeCache->{
          49.237207031249994`, {0.07382812500000036, 4.6634765625}}],
        Appearance->Automatic,
        ButtonFunction:>{{
           ChessPackage`Public`chessHistory, 
            ChessPackage`Public`pgnMovesArray, ChessPackage`Public`pgnmoves, 
            ChessPackage`Public`name, ChessPackage`Public`selectedId, 
            ChessPackage`Public`typeofwin} = 
          ChessPackage`randomGame[
           ChessPackage`Public`data, ChessPackage`Public`dimensioneData], 
          ChessPackage`Public`gamemode = Not[ChessPackage`Public`gamemode], 
          ChessPackage`Public`reveal = False, 
          ChessPackage`Public`answerResult = ""},
        Evaluator->Automatic,
        Method->"Preemptive"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Center}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"]],
  DynamicModuleValues:>{}]], "Output",
 CellChangeTimes->{3.925462864384016*^9, 3.9254633753511314`*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"68be8520-b005-df44-a6ff-f8bfa79df8b7"]
}, Open  ]]
},
WindowSize->{1141.2, 573.6},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
Magnification:>0.7 Inherited,
FrontEndVersion->"14.0 for Microsoft Windows (64-bit) (December 12, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"cb06454f-b928-46f3-badb-3b5bdbc51b01"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 6805, 101, 60, "Input",ExpressionUUID->"cba7eb3c-68f1-4163-87e4-1a407070ef8d"],
Cell[7388, 125, 8532, 204, 558, "Output",ExpressionUUID->"68be8520-b005-df44-a6ff-f8bfa79df8b7"]
}, Open  ]]
}
]
*)

